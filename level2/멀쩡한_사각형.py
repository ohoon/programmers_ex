'''
Summer/Winter Coding(2019)
멀쩡한 사각형
https://programmers.co.kr/learn/courses/30/lessons/62048
'''

def solution(w, h):
    # 최대공약수 구하기
    a, b = (h, w) if h > w else (w, h)      
    t = 1
    while t > 0:
        t = a % b
        a, b = b, t
        
    gcd = a

    return w * h - (w//gcd + h//gcd - 1) * gcd

'''
여담

풀었지만 힌트도 많이 봤고 시간도 엄청 걸렸다.
처음 시도는 2진 탐색으로 반씩 나눠가면서 대각선의 길이가 루트2보다 작으면 return 1을 하는 식으로
재귀적으로 풀려고 시도했는데 w, h의 값이 1억 이하의 자연수라서 엄청난 시간 소모와 메모리가 소요되는 큰 문제점이 있었다.
그래서 뭔가 패턴이 있어서 한 패턴의 경우에 대해 풀고 패턴 수를 곱해주는 방식으로 풀어야겠다는 생각이 들었다.
생각을 곰곰히 하니 최대 공약수마다 대각선이 정확히 교차점에 지난다는 사실을 깨달았다.
그러면 최대 공약수까지의 경우만 생각하면 되는데...
최대 공약수가 크다면 상관없는데 애초에 w와 h이 엄청 큰 수에다가 서로소면? 마찬가지로 비용이 클 것이라 생각이 들었고 결과도 그랬다.
그렇게 한 2시간동안 예시 그림을 들여다보니 보이기 시작했다.
최대공약수까지만 생각하는건 맞고, 이제 서로소인 환경에서 w`, h`라고 할 때 대각선이 지나는 사각형들을 유심히 보니
이 대각선이 h`-1선, w`-1선, h`-2선, w`-2선, ... 이런식으로 규칙적으로 지나가고
선을 지날 때마다 대각선에 의해 갈라지는 사각형이 1개씩 생기더라..
그렇게되면 w`-1만큼의 사각형과 h`-1만큼의 사각형, 그리고 시작점 근처의 사각형까지해서 총 w`+h`-1의 사각형이 갈라지는 것이다.
구한 값을 최대공약수만큼 곱해주면 총 갈라진 사각형 수가 나온다..
이렇게 구하면 단순히 w, h만으로 풀 수 있는거라 복잡한 식이 필요가 없다......ㅠㅠ
 
'''
